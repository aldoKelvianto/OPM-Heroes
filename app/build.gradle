apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: "de.mannodermaus.android-junit5"

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.aldoapps.opmsclass"
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    testOptions {
        unitTests.all {
            jvmArgs '-noverify'
        }
        unitTests {
            includeAndroidResources = true
        }
        unitTests.returnDefaultValues = true
    }
}

android.testOptions {
    // Configuration closure added by the plugin;
    // all configurable parameters related to JUnit 5 can be found here
    junitPlatform {
        // The JUnit Jupiter dependency version to use
        jupiterVersion "5.0.3"

        // The JUnit Vintage Engine dependency version to use
        vintageVersion "4.12.2"

        // Options related to running unit tests with JUnit 5.
        unitTests {
            // Whether or not JUnit 5 test tasks should be affected by
            // JVM Arguments, System Properties & Environment Variables
            // declared through "unitTests.all" closures
            applyDefaultTestOptions true
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:27.0.2'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:design:27.0.2'

    testImplementation 'org.hamcrest:java-hamcrest:2.0.0.0'
    testImplementation 'org.assertj:assertj-core:3.6.2'

    testImplementation 'org.mockito:mockito-core:2.8.9'
    testImplementation "org.powermock:powermock-api-mockito2:$project.powerMockitoVersion"
    testImplementation "org.powermock:powermock-module-junit4:$project.powerMockitoVersion"
    testImplementation "org.powermock:powermock-module-junit4-rule:$project.powerMockitoVersion"
    testImplementation "org.powermock:powermock-classloading-xstream:$project.powerMockitoVersion"

    // (Required) Writing and executing Unit Tests on the JUnit Platform.
    testImplementation junit5.unitTests()

    // (Optional) If you need "Parameterized Tests".
    testImplementation junit5.parameterized()
    testImplementation 'org.junit.vintage:junit-vintage-engine:4.12.3'

    // (Optional) For running tests inside Android Studio 3.x
    // Please refer to the "Android Studio Workarounds" section for more insight on this.
    testCompileOnly junit5.unitTestsRuntime()

    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    // ViewModel and LiveData
    implementation "android.arch.lifecycle:extensions:1.1.0"
    kapt "android.arch.lifecycle:compiler:1.1.0"

    // Room
    implementation "android.arch.persistence.room:runtime:1.0.0"
    kapt "android.arch.persistence.room:compiler:1.0.0"

    kapt 'com.android.databinding:compiler:3.0.1'
}
